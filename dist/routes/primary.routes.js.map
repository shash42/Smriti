{"version":3,"sources":["../../src/routes/primary.routes.js"],"names":["algo1","algo2","router","express","Router","urlencodedParser","extended","get","req","res","render","post","input","body","text","Algorithmia","client","algo","pipe","then","response","send","Run","ocrText","speechText","mode","keywordsArr","Run2"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;IAAYA,K;;AACZ;;IAAYC,K;;AAEZ;;;;;;;;AAEA,IAAMC,SAAS,IAAIC,kBAAQC,MAAZ,EAAf;AAHA;;AAIA,IAAMC,mBAAmB,4BAAW,EAAEC,UAAU,KAAZ,EAAX,CAAzB;;AAEAJ,OAAOK,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC3BA,MAAIC,MAAJ,CAAW,WAAX;AACD,CAFD;;AAIAR,OAAOK,GAAP,CAAW,OAAX,EAAoB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC/BA,MAAIC,MAAJ,CAAW,UAAX;AACD,CAFD;;AAIAR,OAAOK,GAAP,CAAW,SAAX,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACjCA,MAAIC,MAAJ,CAAW,YAAX;AACD,CAFD;AAGAR,OAAOK,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAClCA,MAAIC,MAAJ,CAAW,aAAX;AACD,CAFD;AAGAR,OAAOK,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAChCA,MAAIC,MAAJ,CAAW,UAAX;AACD,CAFD;AAGAR,OAAOK,GAAP,CAAW,SAAX,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACjCA,MAAIC,MAAJ,CAAW,WAAX;AACD,CAFD;AAGAR,OAAOK,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAChCA,MAAIC,MAAJ,CAAW,WAAX;AACD,CAFD;AAGAR,OAAOS,IAAP,CAAY,YAAZ,EAA0BN,gBAA1B,EAA4C,UAACG,GAAD,EAAKC,GAAL,EAAa;AACvD,MAAMG,QAAQJ,IAAIK,IAAJ,CAASC,IAAvB;AACAC,wBAAYC,MAAZ,CAAmB,8BAAnB,EACKC,IADL,CACU,sBADV,EAEKC,IAFL,CAEUN,KAFV,EAGKO,IAHL,CAGU,UAASC,QAAT,EAAmB;AACrBX,QAAIY,IAAJ,CAASD,SAASb,GAAT,EAAT;AACH,GALL;AAMD,CARD;;AAUAL,OAAOS,IAAP,CAAY,QAAZ,EAAsBN,gBAAtB,EAAwC,UAACG,GAAD,EAAKC,GAAL,EAAa;AACnDA,MAAIY,IAAJ,CAASrB,MAAMsB,GAAN,CAAUd,IAAIK,IAAJ,CAASU,OAAnB,EAA4Bf,IAAIK,IAAJ,CAASW,UAArC,EAAiDhB,IAAIK,IAAJ,CAASY,IAA1D,EAAgEjB,IAAIK,IAAJ,CAASa,WAAzE,CAAT;AACD,CAFD;AAGAxB,OAAOS,IAAP,CAAY,QAAZ,EAAsBN,gBAAtB,EAAwC,UAACG,GAAD,EAAKC,GAAL,EAAa;AACnDA,MAAIY,IAAJ,CAASpB,MAAM0B,IAAN,CAAWnB,IAAIK,IAAJ,CAASU,OAApB,EAA6Bf,IAAIK,IAAJ,CAASW,UAAtC,EAAkDhB,IAAIK,IAAJ,CAASY,IAA3D,EAAiEjB,IAAIK,IAAJ,CAASa,WAA1E,CAAT;AACD,CAFD;;kBAIexB,M","file":"primary.routes.js","sourcesContent":["import express from 'express';\r\nimport { urlencoded } from 'body-parser'\r\nimport * as algo1 from './../tasks/part1';\r\nimport * as algo2 from './../tasks/part2';\r\n// Optional: Not working as of 03-02-2020\r\nimport Algorithmia from \"algorithmia\";\r\n\r\nconst router = new express.Router();\r\nconst urlencodedParser = urlencoded({ extended: false })\r\n\r\nrouter.get(\"/\", (req,res) => {\r\n  res.render('index.ejs');\r\n});\r\n\r\nrouter.get(\"/main\", (req,res) => {\r\n  res.render('main.ejs');\r\n});\r\n\r\nrouter.get(\"/revise\", (req,res) => {\r\n  res.render('revise.ejs');\r\n});\r\nrouter.get(\"/summary\", (req,res) => {\r\n  res.render('summary.ejs');\r\n});\r\nrouter.get(\"/stats\", (req,res) => {\r\n  res.render('stat.ejs');\r\n});\r\nrouter.get(\"/stats2\", (req,res) => {\r\n  res.render('stat2.ejs');\r\n});\r\nrouter.get(\"/speak\", (req,res) => {\r\n  res.render('speak.ejs');\r\n});\r\nrouter.post(\"/summarize\", urlencodedParser, (req,res) => {\r\n  const input = req.body.text;\r\n  Algorithmia.client(\"simMQDy9IYWtJUP4quDZXMPx+Ki1\")\r\n      .algo(\"nlp/Summarizer/0.1.8\")\r\n      .pipe(input)\r\n      .then(function(response) {\r\n          res.send(response.get());\r\n      });\r\n});\r\n\r\nrouter.post(\"/part1\", urlencodedParser, (req,res) => {\r\n  res.send(algo1.Run(req.body.ocrText, req.body.speechText, req.body.mode, req.body.keywordsArr));\r\n});\r\nrouter.post(\"/part2\", urlencodedParser, (req,res) => {\r\n  res.send(algo2.Run2(req.body.ocrText, req.body.speechText, req.body.mode, req.body.keywordsArr));\r\n});\r\n\r\nexport default router;"]}